{"version":3,"sources":["actions/types.tsx","actions/MessageAction.tsx","actions/movieAction.tsx","components/SearchMovieInput.tsx","components/SearchResults.tsx","components/NominatedMovies.tsx","layout/Navbar.tsx","layout/Message.tsx","App.tsx","reportWebVitals.ts","reducers/UserReducers.ts","reducers/MovieReducer.ts","reducers/MessageReducer.ts","store/AppState.ts","store/configureStore.ts","theme/myTheme.tsx","index.tsx"],"names":["SEARCH_MOVIE","ADD_NOMINATION","REMOVE_NOMINATION","REMOVE_ALL_NOMINATION","MOVIE_ERROR","ADD_MESSAGE","REMOVE_MESSAGE","REFRESH_LOCAL_STORAGE","LOAD_NOMINATED_MOVIES","LOAD_NOMINATED_MOVIES_ERROR","AddMessage","message","alertType","dispatch","timeout","id","uuid","type","payload","setTimeout","getMovies","movieTitle","pageNum","leaseYear","a","url","console","log","axios","get","res","data","movieItems","map","mov","title","Title","yearOfLease","Year","poster","Poster","imdbID","newPageNum","totalResults","searchInput","movieLeaseYear","SearchMovieInput","useState","setMovieTitle","setMovieLeaseYear","useDispatch","submitInput","event","preventDefault","style","margin","width","Fragment","Box","Card","marginTop","onSubmit","CardContent","Grid","container","item","lg","sm","xl","xs","justifyContent","display","flexWrap","marginRight","TextField","required","label","fullWidth","InputProps","startAdornment","InputAdornment","position","SvgIcon","fontSize","color","onChange","target","value","placeholder","variant","select","SelectProps","native","defaultValue","arr","push","end","Date","getFullYear","i","buildOptions","Button","textTransform","float","SearchResults","_movies","useSelector","state","movies","nominations","pageSize","onClickNextPage","e","onClickPrePage","renderNominationButton","length","some","onClick","newNominatedMovie","substring","msg","addNomination","slot","textAlign","CardHeader","action","alignItems","Typography","align","Math","floor","IconButton","aria-label","Divider","List","index","ListItem","divider","ListItemAvatar","Avatar","src","ListItemText","primary","secondary","ListItemSecondaryAction","NominatedMovies","removeAllNomination","removeNomination","Navbar","AppBar","elevation","Toolbar","height","Icon","Message","_messages","messages","enqueueSnackbar","useSnackbar","useEffect","preventDuplicate","App","localStorage","nominatedMovies","nominated","JSON","parse","getItem","loadNominatedMovies","Container","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","USER_TYPE","initialMovieState","movieSearched","movieNominated","error","initialMessageState","messageArray","rootReducer","combineReducers","user","filter","setItem","stringify","msgObj","initialState","configureStore","createStore","composeWithDevTools","theme","createMuiTheme","palette","main","contrastText","background","default","paper","colors","common","white","text","typography","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","overline","ReactDOM","render","StrictMode","store","maxSnack","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.df128bc9.chunk.js","sourcesContent":["export const SEARCH_MOVIE = \"SEARCH_MOVIE\";\nexport const ADD_NOMINATION = \"ADD_NOMINATION\";\nexport const REMOVE_NOMINATION = \"REMOVE_NOMINATION\";\nexport const REMOVE_ALL_NOMINATION = \"REMOVE_ALL_NOMINATION\";\nexport const MOVIE_ERROR = \"MOVIE_ERROR\";\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const REMOVE_MESSAGE = \"REMOVE_MESSAGE\";\n\nexport const REFRESH_LOCAL_STORAGE = \"REFRESH_LOCAL_STORAGE\";\nexport const LOAD_NOMINATED_MOVIES = \"LOAD_NOMINATED_MOVIES\";\nexport const LOAD_NOMINATED_MOVIES_ERROR = \"LOAD_NOMINATED_MOVIES_ERROR\";","import {v4 as uuid} from \"uuid\";\nimport {Dispatch} from \"redux\";\nimport {ADD_MESSAGE, REMOVE_MESSAGE} from \"./types\";\nimport {VariantType} from \"notistack\";\n\nexport interface messageObj {\n    message: string,\n    alertType: VariantType,\n    id: string\n}\n\nexport interface addMsgAction {\n    type: string;\n    payload: messageObj,\n}\n\nexport interface closeMsgAction {\n    type: string,\n    payload: string,\n}\n\nexport const AddMessage = (message: string, alertType: VariantType, dispatch: Dispatch<addMsgAction | closeMsgAction>, timeout = 3000) => {\n    const id = uuid(); //generate a uuid for the new alert action.\n    dispatch({\n        //dispatch this new action to the reducer.\n        type: ADD_MESSAGE,\n        payload: {message, alertType, id},\n    });\n\n    //make the alert disappear by setting a timeout\n    setTimeout(() => dispatch({type: REMOVE_MESSAGE, payload: id}), timeout);\n}\n\nexport const CloseMessage = (messageId: string, dispatch: Dispatch<closeMsgAction>) => {\n    dispatch({\n        type: REMOVE_MESSAGE,\n        payload: messageId\n    })\n}\n\n","import axios from \"axios\";\nimport {Dispatch} from \"redux\";\n\nimport {\n    SEARCH_MOVIE,\n    ADD_NOMINATION,\n    REMOVE_NOMINATION,\n    MOVIE_ERROR,\n    REMOVE_ALL_NOMINATION,\n    LOAD_NOMINATED_MOVIES,\n    LOAD_NOMINATED_MOVIES_ERROR, REFRESH_LOCAL_STORAGE\n} from \"./types\";\nimport {AddMessage} from \"./MessageAction\";\n\nexport interface Movie {\n    title: string,\n    yearOfLease: number,\n    poster: string,\n    imdbID: string,\n}\n\ninterface myAction {\n    type: string,\n    payload: any | null,\n}\n\n//Get first ten movies based on the input movie title\nexport const getMovies = async (movieTitle: string, pageNum: number, leaseYear: string, dispatch: Dispatch<myAction>) => {\n    try {\n        let url = '';\n        if (leaseYear !== '----') {\n            console.log(\"sss\")\n            url = `https://www.omdbapi.com/?s=${movieTitle}&type=movie&apikey=9c01b986&page=${pageNum}&y=${leaseYear}`;\n        } else {\n            url = `https://www.omdbapi.com/?s=${movieTitle}&type=movie&apikey=9c01b986&page=${pageNum}`;\n        }\n        const res = await axios.get(url)\n        console.log(res)\n        if (res.data[\"Search\"]) {\n            const movieItems = res.data[\"Search\"].map((mov: any) => ({\n                title: mov.Title,\n                yearOfLease: mov.Year,\n                poster: mov.Poster,\n                imdbID: mov.imdbID\n            }));\n            console.log(movieItems)\n            const newPageNum = pageNum;\n            const totalResults = res.data.totalResults;\n            const searchInput = movieTitle;\n            const movieLeaseYear = leaseYear;\n            dispatch({\n                type: SEARCH_MOVIE,\n                payload: {movieItems, newPageNum, totalResults, searchInput, movieLeaseYear}\n            });\n            if (pageNum === 1) {\n                AddMessage(totalResults + \" movies found,cheers!\", 'success', dispatch);\n            }\n\n        } else if (res.data[\"Error\"]) {\n            AddMessage(res.data[\"Error\"], 'error', dispatch);\n        } else {\n            AddMessage(\"Too many results. or invalid input!\", 'error', dispatch);\n        }\n    } catch (e) {\n        AddMessage(\"Invalid input!\", 'error', dispatch);\n    }\n}\n\nexport const addNomination = (newNominatedMovie: Movie, dispatch: Dispatch<myAction>) => {\n    try {\n        dispatch({\n            type: ADD_NOMINATION,\n            payload: newNominatedMovie,\n        });\n\n        dispatch({\n            type: REFRESH_LOCAL_STORAGE,\n            payload: {}\n        })\n\n        AddMessage(\"Success nominate \" + newNominatedMovie.title.substring(0, 10) + \"...\", 'info', dispatch);\n\n    } catch (e) {\n        AddMessage(\"Nomination Error :( \", 'error', dispatch);\n        dispatch({\n            type: MOVIE_ERROR,\n            payload: {\n                msg: e,\n            },\n        });\n    }\n}\n\n\nexport const removeNomination = (newNominatedMovie: Movie, dispatch: Dispatch<myAction>) => {\n    try {\n        dispatch({\n            type: REMOVE_NOMINATION,\n            payload: newNominatedMovie,\n        });\n\n        dispatch({\n            type: REFRESH_LOCAL_STORAGE,\n            payload: {}\n        })\n\n        AddMessage(\"Success remove \" + newNominatedMovie.title.substring(0, 10) + \"...\", 'success', dispatch);\n    } catch (e) {\n        AddMessage(\"Remove Nomination Error :(\", 'error', dispatch);\n        dispatch({\n            type: MOVIE_ERROR,\n            payload: {\n                msg: e,\n            },\n        });\n    }\n}\n\nexport const removeAllNomination = (dispatch: Dispatch<myAction>) => {\n    try {\n        dispatch({\n            type: REMOVE_ALL_NOMINATION,\n            payload: null\n        });\n\n        dispatch({\n            type: REFRESH_LOCAL_STORAGE,\n            payload: {}\n        })\n        AddMessage(\"Success remove all nominated \", 'success', dispatch);\n    } catch (e) {\n        dispatch({\n            type: MOVIE_ERROR,\n            payload: {\n                msg: e,\n            },\n        });\n    }\n}\n\nexport const loadNominatedMovies = (dispatch: Dispatch<myAction>) => {\n    try {\n        if (localStorage.nominatedMovies) {\n            const nominated: Array<Movie> = JSON.parse(localStorage.getItem(\"nominatedMovies\") || \"[]\");\n            dispatch({\n                type: LOAD_NOMINATED_MOVIES,\n                payload: nominated,\n            })\n            AddMessage(\"Success load nominated movie\", 'info', dispatch);\n            AddMessage(\"Welcome back ! :)\", 'success', dispatch);\n        }\n    } catch (e) {\n        AddMessage(\"Load error :(\", 'warning', dispatch);\n        dispatch({\n            type: LOAD_NOMINATED_MOVIES_ERROR,\n            payload: {\n                msg: e,\n            },\n        });\n    }\n}\n","import React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {getMovies} from \"../actions/movieAction\";\nimport Button from '@material-ui/core/Button';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Grid,\n    InputAdornment,\n    InputLabel, MenuItem,\n    NativeSelect, Select,\n    SvgIcon,\n    TextField\n} from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst SearchMovieInput = () => {\n    const [movieTitle, setMovieTitle] = useState('');\n    const [movieLeaseYear, setMovieLeaseYear] = useState('');\n    const dispatch = useDispatch();\n\n    const submitInput = async (event: React.SyntheticEvent) => {\n        event.preventDefault();\n        await getMovies(movieTitle, 1, movieLeaseYear, dispatch);\n    }\n\n    const buildOptions = () => {\n        const arr = [];\n        arr.push(<option key={1900} value=\"blank\">----</option>)\n        const end = new Date().getFullYear();\n        for (let i = 1960; i <= end; i++) {\n            arr.push(<option key={i} value={i}>{i}</option>)\n        }\n        return arr;\n    }\n\n    const handleYearChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setMovieLeaseYear(event.target.value);\n    };\n\n\n    return (\n        <div style={{margin: \"20px\", width: '100%'}}>\n            <React.Fragment>\n                <Box>\n                    <Card style={{marginTop: \"20px\"}}>\n                        <form onSubmit={submitInput}>\n                            <CardContent>\n                                <Grid container>\n                                    <Grid item lg={12} sm={12} xl={12} xs={12}>\n                                        <Box style={{justifyContent: 'start', display: 'flex', flexWrap: 'wrap'}}>\n                                            <div style={{width: '80%', marginTop: '5px', marginRight: '5px'}}>\n                                                <TextField required label=\"movie title\" fullWidth InputProps={{\n                                                    startAdornment: (\n                                                        <InputAdornment position=\"start\">\n                                                            <SvgIcon fontSize=\"small\" color=\"action\"><SearchIcon/>\n                                                            </SvgIcon>\n                                                        </InputAdornment>\n                                                    )\n                                                }}\n                                                           onChange={(event) => {\n                                                               setMovieTitle(event.target.value)\n                                                           }}\n                                                           placeholder=\"Search a movie\"\n                                                           variant=\"outlined\"\n                                                           value={movieTitle}\n                                                />\n                                            </div>\n                                            <div style={{width: '18%', marginTop: '5px', marginRight: '5px'}}>\n                                                <TextField\n                                                    id=\"outlined-select-currency-native\"\n                                                    select\n                                                    label=\"Lease year\"\n                                                    value={movieLeaseYear}\n                                                    onChange={handleYearChange}\n                                                    SelectProps={{\n                                                        native: true,\n                                                    }}\n                                                    defaultValue=\"Default Value\"\n                                                    fullWidth\n                                                    variant=\"outlined\"\n                                                >\n                                                    {buildOptions()}\n                                                </TextField>\n                                            </div>\n                                            <div style={{width: '20%'}}>\n                                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" value=\"Submit\"\n                                                        style={{\n                                                            textTransform: 'none',\n                                                            float: 'left',\n                                                            marginTop: \"10px\"\n                                                        }}>Search</Button>\n                                            </div>\n\n                                        </Box>\n                                    </Grid>\n                                    <Grid>\n                                        <Box>\n\n                                        </Box>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </form>\n                    </Card>\n                </Box>\n            </React.Fragment>\n        </div>\n    );\n}\n\nexport default SearchMovieInput;","import {useDispatch, useSelector} from \"react-redux\";\nimport {AppState} from \"../store/AppState\";\nimport React from \"react\";\nimport {addNomination, getMovies, Movie} from \"../actions/movieAction\";\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport {\n    Card,\n    CardHeader,\n    Divider,\n    IconButton,\n    Typography\n} from \"@material-ui/core\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport {AddMessage} from \"../actions/MessageAction\";\n\nconst SearchResults = () => {\n    const _movies = useSelector((state: AppState) => state.movies);\n    const movies: Array<Movie> = _movies['movieSearched'];\n    console.log(movies)\n    const nominations: Array<Movie> = _movies['movieNominated'];\n    const {\n        pageNum,\n        pageSize,\n        totalResults,\n        searchInput,\n        movieLeaseYear\n    } = useSelector((state: AppState) => state.movies);\n    const dispatch = useDispatch();\n    //const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n    const onClickNextPage = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        if (pageNum * pageSize >= totalResults) {\n            AddMessage(\"Last page\", 'info', dispatch);\n        } else {\n            await getMovies(searchInput, pageNum + 1, movieLeaseYear, dispatch);\n        }\n\n    }\n\n    const onClickPrePage = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        if (pageNum === 1) {\n            AddMessage(\"First page\", 'info', dispatch);\n        } else {\n            await getMovies(searchInput, pageNum - 1, movieLeaseYear, dispatch);\n        }\n\n    }\n\n    const renderNominationButton = (mov: Movie) => {\n        if (nominations.length < 5) {\n            if (!nominations.some((item) => {\n                return item.imdbID === mov.imdbID\n            })) {\n                return (\n                    <Button variant=\"contained\" color=\"primary\" style={{textTransform: 'none'}}\n                            onClick={() => addNomination(mov, dispatch)}>Nominate</Button>\n                )\n            }\n        } else {\n            AddMessage(\"Well done! 5 movies nominated :)\", 'success', dispatch);\n            return null;\n        }\n    }\n\n    const cardHeaderText = (): String => {\n        if (searchInput !== \"\") {\n            return `Results for \"${searchInput}\"`\n        } else {\n            return \"Results\"\n        }\n    }\n\n    // const msgSuccess = () => {\n    //     enqueueSnackbar('Success get data from API');\n    // }\n\n    return (\n        <div style={{margin: \"20px\"}}>\n            <React.Fragment>\n                <Card style={{marginTop: \"20px\"}}>\n                    <div slot=\"header\" style={{textAlign: 'left'}}>\n                        <CardHeader\n                            title={cardHeaderText()}\n                            action={\n                                <div style={{justifyContent: 'space-between', display: 'flex'}}>\n                                    <div style={{\n                                        display: 'flex',\n                                        justifyContent: 'center',\n                                        alignItems: 'center'\n                                    }}>\n                                        <Typography align=\"center\">\n                                            {`${pageNum} / ${Math.floor((totalResults / pageSize) + 1)} - ${totalResults}`}\n                                        </Typography>\n                                    </div>\n                                    <div style={{}}>\n                                        <IconButton color=\"primary\" onClick={onClickPrePage} aria-label=\"pre page\">\n                                            <ArrowBackIcon/>\n                                        </IconButton>\n                                    </div>\n                                    <div style={{}}>\n                                        <IconButton color=\"primary\" onClick={onClickNextPage} aria-label=\"next page\">\n                                            <ArrowForwardIcon/>\n                                        </IconButton>\n                                    </div>\n                                </div>\n                            }\n                        />\n                    </div>\n                    <Divider/>\n                    {movies.length !== 0 && (\n                        <List>\n                            {movies.map((mov, index) => (\n                                <ListItem\n                                    divider={index < movies.length - 1}\n                                    key={index}\n                                >\n                                    <ListItemAvatar>\n                                        <Avatar src={mov.poster}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={mov.title}\n                                        secondary={`Posted on ${mov.yearOfLease}`}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        {renderNominationButton(mov)}\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            ))}\n                        </List>)}\n                </Card>\n            </React.Fragment>\n        </div>\n\n    );\n\n};\nexport default SearchResults;","import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppState} from \"../store/AppState\";\nimport {Movie, removeAllNomination, removeNomination} from \"../actions/movieAction\";\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport {Card, CardHeader, Divider, IconButton} from \"@material-ui/core\";\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\n\nconst NominatedMovies = () => {\n    const _movies = useSelector((state: AppState) => state.movies);\n    const dispatch = useDispatch();\n    const nominations: Array<Movie> = _movies['movieNominated'];\n    const deleteAllNominatedMovies = () => {\n        removeAllNomination(dispatch);\n    }\n\n    return (\n        <div style={{margin: '20px'}}>\n            <React.Fragment>\n                <Card style={{marginTop: \"20px\"}}>\n                    <CardHeader\n                        // subtitle={`${products.length} in total`}\n                        title=\"Nominated Movies\"\n                        style={{textAlign: \"left\"}}\n                        action={\n                            <div>\n                                <IconButton color=\"secondary\" onClick={deleteAllNominatedMovies} aria-label=\"clear\">\n                                    <DeleteSweepIcon/>\n                                </IconButton>\n                            </div>\n\n                        }\n                    />\n                    <Divider/>\n                    {nominations.length !== 0 && (\n                        <List>\n                            {nominations.map((mov, index) => (\n                                <ListItem\n                                    divider={index < nominations.length - 1}\n                                    key={mov.imdbID}\n                                >\n                                    <ListItemAvatar>\n                                        <Avatar src={mov.poster}/>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={mov.title}\n                                        secondary={`Posted on ${mov.yearOfLease}`}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <Button variant=\"contained\" color=\"secondary\" style={{textTransform: 'none'}}\n                                                onClick={() => removeNomination(mov, dispatch)}>\n                                            Remove\n                                        </Button>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            ))}\n                        </List>)}\n                </Card>\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default NominatedMovies;","import {AppBar, Icon, Toolbar, Typography} from \"@material-ui/core\";\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\n\nconst Navbar = () => {\n    return (\n        <AppBar position=\"static\"\n                elevation={0}\n        >\n            <Toolbar style={{height: 20}}>\n                <Icon>\n                    <TrackChangesIcon/>\n                </Icon>\n\n                <Typography variant=\"h3\" color=\"inherit\">\n                    &nbsp; The Shoppies\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Navbar;","import {useSelector} from \"react-redux\";\nimport {AppState} from \"../store/AppState\";\nimport {useEffect} from \"react\";\nimport {messageObj} from \"../actions/MessageAction\";\nimport {useSnackbar} from 'notistack';\n\nconst Message = () => {\n    const _messages = useSelector((state: AppState) => state.messages);\n    const messages: Array<messageObj> = _messages ? _messages['messageArray'] : [];\n    const {enqueueSnackbar} = useSnackbar();\n\n\n    useEffect(() => {\n        messages !== null && messages.length > 0 &&\n        messages.map((item: messageObj, index) => (enqueueSnackbar(item.message, {\n            variant: item.alertType,\n            preventDuplicate: true,\n        })))\n    }, [messages, enqueueSnackbar])\n\n    return null\n\n}\n\n\nexport default Message;","import React, {useEffect} from 'react';\nimport './App.css';\nimport SearchMovieInput from \"./components/SearchMovieInput\";\nimport SearchResults from \"./components/SearchResults\";\nimport NominatedMovies from \"./components/NominatedMovies\";\n\nimport {Container, Grid} from '@material-ui/core';\n\nimport Navbar from \"./layout/Navbar\";\nimport Message from \"./layout/Message\";\nimport {loadNominatedMovies} from \"./actions/movieAction\";\nimport {useDispatch} from \"react-redux\";\n\n\nconst App = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        loadNominatedMovies(dispatch);\n    });\n\n\n    return (\n        <React.Fragment>\n            <Navbar/>\n            <Message/>\n            <Container style={{margin: 'auto'}}>\n                <div style={{justifyContent: 'center', display: 'flex'}}>\n                    <SearchMovieInput/>\n                </div>\n                <div style={{justifyContent: 'center', display: 'flex'}}>\n                    <Grid container>\n                        <Grid item xl={6} lg={6} md={6} sm={12} xs={12}>\n                            <SearchResults/>\n                        </Grid>\n                        <Grid item xl={6} lg={6} md={6} sm={12} xs={12}>\n                            <NominatedMovies/>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const USER_TYPE = \"USER_TYPE\";\n\nexport interface User {\n    id: string;\n    username: string;\n    email: string;\n    city: string;\n}\n\nexport interface UserAction {\n    type: string;\n    payload: User | null;\n}\n\nexport const UserReducer = (state: User | null = null, action: UserAction): User | null => {\n    switch (action.type) {\n        case USER_TYPE:\n            console.log(\"user reducer\", action.payload);\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {\n    ADD_NOMINATION, LOAD_NOMINATED_MOVIES,\n    LOAD_NOMINATED_MOVIES_ERROR,\n    MOVIE_ERROR, REFRESH_LOCAL_STORAGE,\n    REMOVE_ALL_NOMINATION,\n    REMOVE_NOMINATION,\n    SEARCH_MOVIE\n} from \"../actions/types\";\nimport {Movie} from \"../actions/movieAction\";\n\n\nexport interface MovieAction {\n    type: string;\n    payload: any;\n}\n\nconst initialMovieState = {\n    movieSearched: [],\n    movieNominated: [],\n    searchInput: \"\",\n    movieLeaseYear: \"\",\n    pageNum: 1,\n    pageSize: 10,\n    totalResults: 0,\n    error: {},\n}\n\nexport const MovieReducer = (state: any | null = initialMovieState, action: MovieAction) => {\n    const {type, payload} = action;\n    // console.log(\"payload\", payload.movieItems);\n    switch (type) {\n        case SEARCH_MOVIE:\n            return {\n                ...state,\n                movieSearched: payload.movieItems,\n                pageNum: payload.newPageNum,\n                totalResults: payload.totalResults,\n                searchInput: payload.searchInput,\n                movieLeaseYear: payload.movieLeaseYear,\n            }\n        case ADD_NOMINATION:\n            return {\n                ...state,\n                movieNominated: [...state.movieNominated, payload],\n            }\n        case REMOVE_NOMINATION:\n            return {\n                ...state,\n                movieNominated: state.movieNominated.filter((mov: Movie) => {\n                        return mov !== payload;\n                    }\n                )\n            }\n        case REMOVE_ALL_NOMINATION:\n            return {\n                ...state,\n                movieNominated: []\n            }\n        case REFRESH_LOCAL_STORAGE:\n            localStorage.setItem(\"nominatedMovies\", JSON.stringify(state.movieNominated));\n            return state;\n        case LOAD_NOMINATED_MOVIES:\n            return {\n                ...state,\n                movieNominated: payload,\n            }\n        case LOAD_NOMINATED_MOVIES_ERROR:\n        case MOVIE_ERROR:\n            return {\n                ...state,\n                error: payload,\n            }\n        default:\n            return state;\n    }\n}\n","import {addMsgAction, closeMsgAction, messageObj} from \"../actions/MessageAction\";\n\nexport interface messageState {\n    messageArray: Array<addMsgAction[\"payload\"]>;\n}\n\nconst initialMessageState = {\n    messageArray: [],\n}\n\nexport const MessageReducer = (state: messageState = initialMessageState, action: addMsgAction | closeMsgAction) => {\n    const {type, payload} = action;\n    switch (type) {\n        case \"ADD_MESSAGE\":\n            return {\n                ...state,\n                messageArray: [...state.messageArray, payload],\n            }\n        case \"REMOVE_MESSAGE\":\n            return {\n                ...state,\n                messageArray: state.messageArray.filter((msgObj: messageObj) => {\n                    return msgObj.id !== payload;\n                })\n            }\n        default:\n            return state\n    }\n}","import {combineReducers} from \"redux\";\nimport {UserReducer} from \"../reducers/UserReducers\";\nimport {MovieReducer} from \"../reducers/MovieReducer\";\nimport {MessageReducer} from \"../reducers/MessageReducer\";\n\nexport const rootReducer = combineReducers({\n    user: UserReducer,\n    movies: MovieReducer,\n    messages: MessageReducer\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;","import {createStore} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {rootReducer} from \"./AppState\";\n\nconst initialState = {};\n\nconst configureStore = () => {\n    return createStore(rootReducer, initialState,composeWithDevTools());\n}\n\nexport default configureStore;","import {colors, createMuiTheme} from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#339df1\",\n            contrastText: \"#fff\",\n        },\n        background: {\n            default: '#F4F6F8',\n            paper: colors.common.white\n        },\n        text: {\n            primary: '#172b4d',\n            secondary: '#6b778c',\n        }\n    },\n    typography: {\n        h1: {\n            fontWeight: 500,\n            fontSize: 35,\n            letterSpacing: '-0.24px'\n        },\n        h2: {\n            fontWeight: 500,\n            fontSize: 29,\n            letterSpacing: '-0.24px'\n        },\n        h3: {\n            fontWeight: 500,\n            fontSize: 24,\n            letterSpacing: '-0.06px'\n        },\n        h4: {\n            fontWeight: 500,\n            fontSize: 20,\n            letterSpacing: '-0.06px'\n        },\n        h5: {\n            fontWeight: 500,\n            fontSize: 16,\n            letterSpacing: '-0.05px'\n        },\n        h6: {\n            fontWeight: 500,\n            fontSize: 14,\n            letterSpacing: '-0.05px'\n        },\n        overline: {\n            fontWeight: 500\n        }\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\nimport {SnackbarProvider} from \"notistack\";\nimport {theme} from \"./theme/myTheme\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={configureStore()}>\n            <SnackbarProvider maxSnack={5}>\n                <ThemeProvider theme={theme}>\n                    <App/>\n                </ThemeProvider>\n            </SnackbarProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}